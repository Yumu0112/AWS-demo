# rbenvインストール
# git clone https://github.com/sstephenson/rbenv.git ~/.rbenv
- name: install rbenv
  become: true
  git: 
    repo: https://github.com/sstephenson/rbenv.git 
    dest: /home/ec2-user/.rbenv

- name: edit permission rbenv
  become: true
  file:
    path: /home/ec2-user/.rbenv
    state: directory
    owner: ec2-user
    group: ec2-user

# パスを通す
# echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bash_profile
- name: Add rbenv to PATH
  lineinfile: 
    path: /home/ec2-user/.bash_profile
    line: 'export PATH="$HOME/.rbenv/bin:$PATH"'

# ~/.bash_profileは、ユーザーのログインシェルで起動時に読み込まれるスクリプトファイル。
# 提供されたコードは、~/.bash_profileファイルにrbenvの初期化を追加することで、ログインシェル起動時に自動的にrbenvを初期化する。
# echo 'eval "$(rbenv init -)"' >> ~/.bash_profile 
- name: eval rbenv init
  lineinfile: 
    path: /home/ec2-user/.bash_profile
    line: 'eval "$(rbenv init -)"'

# 環境変数や設定の変更を現在のシェルに反映させる
- name: rbenv setting
  shell: bash -lc "source ~/.bash_profile"



# ruby-buildのインストール 
# git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
- name: install ruby-build
  git:
    repo: https://github.com/sstephenson/ruby-build.git
    dest: /home/ec2-user/.rbenv/plugins/ruby-build
  become: true

# rubyがインストールされているか確認
- name: check ruby installed
  stat:
    path: /home/ec2-user/.rbenv/shims/ruby
  register: ruby_installed

# インストールされていなければrubyをインストール
- name: install ruby
  become_user: ec2-user
  shell: bash -lc "rbenv install {{ ruby_version }}"
  when: not ruby_installed.stat.exists

- name: set default ruby version rehash
  become_user: ec2-user
  shell: bash -lc "rbenv rehash"

# rbenvは複数のrubyバージョンを管理できるため、システムのデフォルトのバージョンを設定
- name: set default ruby version
  become_user: ec2-user
  shell: bash -lc "rbenv global {{ ruby_version }}"



# bundlerがインストールされているか確認
- name: check bundler installed
  shell: /home/ec2-user/.rbenv/shims/bundler --version
  register: bundler_check
  changed_when: false
  failed_when: false

# bundlerインストール
- name: bundler install
  gem:
    name: bundler
    version: "{{ bundler_version }}"
    user_install: no
  when: bundler_check.rc != 0



# railsがインストールされているか確認
- name: check rails install
  command: "{{ item }}"
  register: rails_exists
  changed_when: false
  failed_when: "'rails' not in rails_exists.stdout"
  ignore_errors: true
  with_items:
    - bash -lc "gem list -e rails"
    - bash -lc "gem list rails"

# railsインストール
- name: rails install
  gem:
    name: rails
    version: "{{ rails_version }}"
    user_install: no
  timeout: 300
  when: rails_exists is failed
