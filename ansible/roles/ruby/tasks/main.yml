- name: Check if directory exists for .bash_profile
  stat:
    path: /home/circleci
  register: bash_profile_directory_exists

- name: Create directory for .bash_profile if it doesn't exist
  file:
    path: /home/circleci
    state: directory
  when: not bash_profile_directory_exists.stat.exists

- name: Check if .bash_profile exists
  stat:
    path: /home/circleci/.bash_profile
  register: bash_profile_exists

- name: Create .bash_profile if it doesn't exist
  file:
    path: /home/circleci/.bash_profile
    state: touch
  when: not bash_profile_exists.stat.exists

- name: Add rbenv to PATH in .bash_profile
  lineinfile: 
    path: /home/circleci/.bash_profile
    line: 'export PATH="$HOME/.rbenv/bin:$PATH"'
  when: bash_profile_exists.stat.exists

- name: install rbenv
  become: yes
  git: 
    repo: https://github.com/sstephenson/rbenv.git 
    dest: /home/circleci/.rbenv

- name: edit permission rbenv
  become: yes
  file:
    path: /home/circleci/.rbenv
    state: directory
    owner: ec2-user
    group: ec2-user

- name: Add rbenv to PATH
  lineinfile: 
    path: /home/circleci/.bash_profile
    line: 'export PATH="$HOME/.rbenv/bin:$PATH"'

- name: eval rbenv init
  lineinfile: 
    path: /home/circleci/.bash_profile
    line: 'eval "$(rbenv init -)"'

- name: rbenv setting
  shell: bash -lc "source ~/.bash_profile"

#ruby-buildのインストール 
- name: install ruby-build
  git:
    repo: https://github.com/sstephenson/ruby-build.git
    dest: /home/circleci/.rbenv/plugins/ruby-build

- name: Install dependencies
  become: true
  yum:
    name: "{{ item }}"
    state: present
  loop:
    - git
    - gcc
    - bzip2
    - openssl-devel
    - libyaml-devel
    - libffi-devel
    - readline-devel
    - zlib-devel
    - gdbm-devel
    - ncurses-devel

- name: Install ruby-build asynchronously
  async: 600
  poll: 0
  become_user: ec2-user
  shell: bash -lc "rbenv install {{ ruby_version }}"
  register: rbenv_install_result
  ignore_errors: true

- name: Wait for ruby-build to complete
  async_status:
    jid: "{{ rbenv_install_result.ansible_job_id }}"
  register: rbenv_install_status
  until: rbenv_install_status.finished
  retries: 360
  delay: 10

#rubyを使用可能にする
- name: set default ruby version rehash
  become_user: ec2-user
  shell: bash -lc "rbenv rehash"

#インスタンスで使用するバージョンの設定
- name: set default ruby version
  become_user: ec2-user
  shell: bash -lc "rbenv global {{ ruby_version }}"

- name: Install bundler
  become: true
  gem:
    name: bundler
    state: latest